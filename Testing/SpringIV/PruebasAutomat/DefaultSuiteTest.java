// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class DefaultSuiteTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() throws MalformedURLException {
    driver = new RemoteWebDriver(new URL("http://localhost:4444/wd/hub"), DesiredCapabilities.chrome());
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void formularioRegistro() {
    // Test name: Formulario_Registro
    // Step # | name | target | value
    // 1 | open | / | 
    driver.get("http://localhost:5173/");
    // 2 | setWindowSize | 1376x784 | 
    driver.manage().window().setSize(new Dimension(1376, 784));
    // 3 | click | css=.rounded | 
    driver.findElement(By.cssSelector(".rounded")).click();
    // 4 | click | linkText=Registrarse | 
    driver.findElement(By.linkText("Registrarse")).click();
    // 5 | click | id=firstName | 
    driver.findElement(By.id("firstName")).click();
    // 6 | type | id=firstName | Yohana
    driver.findElement(By.id("firstName")).sendKeys("Yohana");
    // 7 | click | id=lastName | 
    driver.findElement(By.id("lastName")).click();
    // 8 | type | id=lastName | Zapata
    driver.findElement(By.id("lastName")).sendKeys("Zapata");
    // 9 | click | id=username | 
    driver.findElement(By.id("username")).click();
    // 10 | type | id=username | yohaskj22
    driver.findElement(By.id("username")).sendKeys("yohaskj22");
    // 11 | click | id=email | 
    driver.findElement(By.id("email")).click();
    // 12 | type | id=email | yohaskj22@gmail.com
    driver.findElement(By.id("email")).sendKeys("yohaskj22@gmail.com");
    // 13 | click | id=phone | 
    driver.findElement(By.id("phone")).click();
    // 14 | type | id=phone | 3137346713
    driver.findElement(By.id("phone")).sendKeys("3137346713");
    // 15 | click | id=documentNumber | 
    driver.findElement(By.id("documentNumber")).click();
    // 16 | type | id=documentNumber | 1130681593
    driver.findElement(By.id("documentNumber")).sendKeys("1130681593");
    // 17 | click | id=password | 
    driver.findElement(By.id("password")).click();
    // 18 | type | id=password | YOHAnaz1*
    driver.findElement(By.id("password")).sendKeys("YOHAnaz1*");
    // 19 | click | id=confirmPassword | 
    driver.findElement(By.id("confirmPassword")).click();
    // 20 | type | id=confirmPassword | YOHAnaz1*
    driver.findElement(By.id("confirmPassword")).sendKeys("YOHAnaz1*");
    // 21 | click | css=.w-40 | 
    driver.findElement(By.cssSelector(".w-40")).click();
    // 22 | assertText | css=.text-red-500 | La contraseña debe tener al menos 8 caracteres, incluyendo un número, una letra mayúscula, una letra minúscula y un carácter especial (@#.$%^&+=!)
    assertThat(driver.findElement(By.cssSelector(".text-red-500")).getText(), is("La contraseña debe tener al menos 8 caracteres, incluyendo un número, una letra mayúscula, una letra minúscula y un carácter especial (@#.$%^&+=!)"));
    // 23 | click | css=.min-h-screen | 
    driver.findElement(By.cssSelector(".min-h-screen")).click();
    // 24 | click | css=.space-y-8 | 
    driver.findElement(By.cssSelector(".space-y-8")).click();
  }
  @Test
  public void inicioSesion() {
    // Test name: InicioSesion
    // Step # | name | target | value
    // 1 | open | / | 
    driver.get("http://localhost:5173/");
    // 2 | setWindowSize | 1376x784 | 
    driver.manage().window().setSize(new Dimension(1376, 784));
    // 3 | click | css=.rounded | 
    driver.findElement(By.cssSelector(".rounded")).click();
    // 4 | click | id=username | 
    driver.findElement(By.id("username")).click();
    // 5 | type | id=username | yohaskj22
    driver.findElement(By.id("username")).sendKeys("yohaskj22");
    // 6 | click | id=password | 
    driver.findElement(By.id("password")).click();
    // 7 | type | id=password | yohas123
    driver.findElement(By.id("password")).sendKeys("yohas123");
    // 8 | click | css=.w-40 | 
    driver.findElement(By.cssSelector(".w-40")).click();
  }
}
